function solution(inputArray = []) {
  let arr = [...inputArray];
  let moves = 0;

  for (let i = 1; i < arr.length; i++) {
    let current = arr[i];
    let prev = arr[i - 1];

    while (current <= prev) {
      moves++;
      current++;
    }
    arr[i] = current;
  }
  return moves;
}

console.log(solution([1, 1, 1]));
// Expected Output: 3
console.log(solution([-1000, 0, -2, 0]));
// Expected Output: 5
console.log(solution([2, 1, 10, 1]));
// Expected Output: 12
console.log(solution([2, 3, 3, 5, 5, 5, 4, 12, 12, 10, 15]));
// Expected Output: 13
console.log(solution([3122, -645, 2616, 13213, -8069]));
// Expected Output: 25559
console.log(
  solution([
    -787, -773, -93, 867, -28, 118, 372, 255, 355, 598, -179, -752, 794, 961,
    -84, 296, -714, 14, 666, -265, -905, 942, -691, -379, -698, -650, 637, 523,
    709, -674, 574, -239, 805, -434, 597, -677, 664, 384, 726, -389, -387, 772,
    -603, 685, 249, 446, -631, 454, 983, 867, -158, 932, -440, 891, -12, 400,
    -916, 503, 185, -802, -255, 207, -952, -506, -689, 425, 747, -907, -30, 102,
    553, 981, -664, 75, -957, -42, 99, -750, -277, 686, -884, -972, 470, 32,
    439, 163, 887, 895, -555, -654, 793, 333, 143, 73, 181, -512, -915, -68,
    542, 799,
  ])
);
// Expected Output: 89510
console.log(
  solution([
    -28943, -29728, -24726, -15090, -2555, -9551, -11025, 36442, -23240, -46093,
    48516, 44580, -21573, 39172, -38017, -19354, -13460, 38212, -35646, -22288,
    36832, -33115, 39055, -15935, -19300, -10419, -18548, 21742, -32032, 27988,
    -45323, 27454, -5683, -14209, -4168, 51188, 45552, 9899, 49241, -25939,
    -8344, -25788, 6808, 6931, 6145, -30802, -518, -42362,
  ])
);
// Expected Output: 2020705
// console.log(solution([22121, 42080, -51776, -28528, 39895, -50842, 25463, 46187, -29518, 42293, -25615, -47412, 24945, -2630, -12717, -23773, -47824, -7768, -23620, -30270, -51644, 42829, 27609, -40734, 2142, 20285, 29665, -36557, -24074, -11996, 30511, 17104, 4360, -41163, 6814, 959, 26613, -15121, -17355, 28424, -11305, 33175, -8585, 23649, -18428, 16770, 14095, 38766, -22425, -45139, -5836, -28668, -15123, -35450, 41353, 11103, -29233, -51990, -14958, 45944, 20841, -34149, 34720, -51760, 23519, -46257, 40985, -32615, -43378, 14243, -24731, 1311, -4236, -24885, 41713, -45195, -14683, 47765, 26904, -51741, 38051, 13429, 38189, -45812, -52474, 14936, 6582, -26313, 4692, 12313, -37502, -40673, 5799, 23264, 33617, -50938, 26268, -25548, -22353, -15175, ...]))
// // Expected Output: 7097995
